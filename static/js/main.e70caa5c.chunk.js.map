{"version":3,"sources":["redux/subscribers/types.js","redux/views/types.js","redux/comments/types.js","components/subscribers.js","redux/subscribers/actions.js","redux/comments/reducer.js","redux/subscribers/reducer.js","redux/views/reducer.js","redux/rootReducer.js","redux/store.js","components/Display.js","components/Views.js","redux/views/actions.js","components/Comments.js","redux/comments/actions.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_SUBSCRIBER","REMOVE_SUBSCRIBER","ADD_VIEWS","FETCH_COMMENTS_REQUEST","FETCH_COMMENTS_SUCESS","FETCH_COMMENTS_FAILURE","mapDispatchToProps","addSubscriber","type","removeSubscriber","connect","count","subscribers","className","onClick","initialState","items","loading","err","commentsReducer","state","action","payload","subscribersReducer","viewsReducer","rootReducer","combineReducers","view","comments","middleware","logger","thunk","store","createStore","composeWithDevTools","applyMiddleware","props","addView","number","Number","useState","setNumber","value","onChange","e","target","mapDispaychToProps","fetchComments","dispatch","fetch","then","response","json","fetchCommentSucess","catch","error","fetchCommentFailure","useEffect","commentsItmes","map","comment","name","email","body","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e70caa5c.chunk.js","sourcesContent":["export const ADD_SUBSCRIBER = 'ADD_SUBSCRIBER'\r\nexport const REMOVE_SUBSCRIBER = 'REMOVE_SUBSCRIBER'","export const ADD_VIEWS = 'ADD_VIEWS'","export const FETCH_COMMENTS = 'FETCH_COMMENTS';\r\nexport const FETCH_COMMENTS_REQUEST = 'FETCH_COMMENTS_REQUEST';\r\nexport const FETCH_COMMENTS_SUCESS = 'FETCH_COMMENTS_SUCESS';\r\nexport const FETCH_COMMENTS_FAILURE = 'FETCH_COMMENTS_FAILURE';","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addSubscriber, removeSubscriber } from '../redux'\r\n\r\nconst Subscribers = ({count,addSubscriber,removeSubscriber}) => {\r\n  return (\r\n    <div className=\"items\">\r\n      <h2>구독자 수 : {count}</h2>\r\n      <button type=\"button\" onClick={()=> addSubscriber()}>구독하기</button>\r\n      <button type=\"button\" onClick={()=> removeSubscriber()}>구독 취소하기</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({subscribers}) =>{\r\n  return{\r\n    count:subscribers.count\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n  addSubscriber,\r\n  removeSubscriber\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Subscribers)\r\n","import { ADD_SUBSCRIBER, REMOVE_SUBSCRIBER } from \"./types\"\r\n\r\n\r\nexport const addSubscriber = () =>{\r\n  return {\r\n    type:ADD_SUBSCRIBER\r\n  }\r\n}\r\n\r\nexport const removeSubscriber = () =>{\r\n  return {\r\n    type:REMOVE_SUBSCRIBER\r\n  }\r\n}","import { FETCH_COMMENTS, FETCH_COMMENTS_REQUEST, FETCH_COMMENTS_SUCESS, FETCH_COMMENTS_FAILURE } from \"./types\"\r\n\r\nconst initialState = {\r\n  items:[],\r\n  loading:false,\r\n  err: null\r\n}\r\n\r\nconst commentsReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n      case FETCH_COMMENTS_REQUEST:\r\n        return{\r\n          ...state,\r\n          loading:true,\r\n        }\r\n        case FETCH_COMMENTS_SUCESS:\r\n        return{\r\n          ...state,\r\n          items:action.payload,\r\n          loading:false,\r\n        }\r\n        case FETCH_COMMENTS_FAILURE:\r\n        return{\r\n          ...state,\r\n          err:action.payload,\r\n          loading:false,\r\n        }\r\n      default: return state;\r\n    }\r\n}\r\n\r\nexport default commentsReducer","import { ADD_SUBSCRIBER, REMOVE_SUBSCRIBER } from \"./types\"\r\n\r\nconst initialState = {\r\n  count:370\r\n}\r\n\r\nconst subscribersReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n      case ADD_SUBSCRIBER:\r\n        return {\r\n          ...state,\r\n          count: state.count + 1\r\n        }\r\n      case REMOVE_SUBSCRIBER:\r\n        return {\r\n          ...state,\r\n          count: state.count - 1\r\n        }\r\n      default: return state\r\n    }\r\n}\r\n\r\nexport default subscribersReducer","import { ADD_VIEWS } from \"./types\"\r\n\r\nconst initialState = {\r\n  count:0,\r\n}\r\n\r\nconst viewsReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n      case ADD_VIEWS:\r\n        return {\r\n          ...state,\r\n          count: state.count + action.payload\r\n        }\r\n      default: return state\r\n    }\r\n}\r\n\r\nexport default viewsReducer","import {combineReducers} from 'redux'\r\nimport commentsReducer from './comments/reducer'\r\nimport subscribersReducer from './subscribers/reducer'\r\nimport viewsReducer from './views/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  view:viewsReducer,\r\n  subscribers:subscribersReducer,\r\n  comments:commentsReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './rootReducer';\r\nimport logger from 'redux-logger'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst middleware = [logger, thunk]\r\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div>\r\n      <p>구독자 수 : {props.count}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({subscribers}) =>{\r\n  return{\r\n    count:subscribers.count\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Display)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addView } from '../redux'\r\n\r\nconst Views = ({count, addView}) => {\r\n  const [number, setNumber] = useState(1)\r\n  return (\r\n    <div className=\"items\">\r\n      <h2>조회 수 : {count}</h2>\r\n      <input type=\"text\" value={number} onChange={(e)=> setNumber(e.target.value)} /> <button type=\"button\" onClick={()=> addView(number)}>조회하기</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({view}) =>{\r\n  return{\r\n    count:view.count\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addView : (number) => addView(number)\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Views)\r\n","import { ADD_VIEWS } from \"./types\"\r\n\r\nexport const addView = (number) =>{\r\n  return {\r\n    type:ADD_VIEWS,\r\n    payload: Number(number)\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {fetchComments} from '../redux'\r\n\r\nconst Comments = ({fetchComments, loading, comments}) => {\r\n\r\n  useEffect(()=>{\r\n    fetchComments()\r\n  }, [])\r\n\r\n  const commentsItmes = loading ? (<div>is loading...</div>) : (\r\n    comments.map((comment)=>(\r\n      <div key={comment.id}>\r\n        <p>{comment.name}</p>\r\n        <p>{comment.email}</p>\r\n        <p>{comment.body}</p>\r\n      </div>\r\n    ))\r\n  )\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      {commentsItmes}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({comments}) =>{\r\n  return{\r\n    comments:comments.items\r\n  }\r\n}\r\n\r\nconst mapDispaychToProps = {\r\n  fetchComments\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispaychToProps)(Comments)","import { FETCH_COMMENTS, FETCH_COMMENTS_REQUEST, FETCH_COMMENTS_SUCESS, FETCH_COMMENTS_FAILURE } from \"./types\"\r\n\r\nexport const fetchCommentSucess = (comments) =>{\r\n  return  {\r\n    type: FETCH_COMMENTS_SUCESS,\r\n    payload: comments\r\n  }\r\n}\r\n\r\nexport const fetchCommentFailure = (error) =>{\r\n  return  {\r\n    type: FETCH_COMMENTS_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n\r\nexport const fetchCommentRequest = () =>{\r\n  return  {\r\n    type: FETCH_COMMENTS_REQUEST\r\n  }\r\n}\r\n\r\nexport const fetchComments = () =>{\r\n  return (dispatch) => {\r\n    dispatch(fetchCommentRequest())\r\n    fetch('https://jsonplaceholder.typicode.com/comments')\r\n    .then(response => response.json())\r\n    .then(comments=> dispatch(fetchCommentSucess(comments)))\r\n    .catch(error => dispatch(fetchCommentFailure(error)))\r\n  }\r\n}","import './App.css';\nimport Subscribers from './components/subscribers';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Display from './components/Display';\nimport Views from './components/Views';\nimport Comments from './components/Comments';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    {/* Provider 를 이용하여 props로 store를 넘겨받음 */}\n    <div className=\"App\">\n      <Subscribers />\n      <Views />\n      <Display />\n      <Comments />\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}